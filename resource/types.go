// Generated by https://quicktype.io
package main

type IConfig struct {
	PageLoad        PageLoad             `json:"pageLoad"`
	DataSection     []IConfigDataSection `json:"dataSection"`
	SwitchSection   SwitchSection        `json:"switchSection"`
	DownloadRoot    string               `json:"downloadRoot"`
	DownloadSection []DownloadSection    `json:"downloadSection"`
}

type IConfigDataSection struct {
	Selector     string       `json:"selector"`
	Label        string       `json:"label"`
	ID           string       `json:"id"`
	SectionType  *string      `json:"sectionType,omitempty"`
	Items        []PurpleItem `json:"items"`
	ItemType     *ItemType    `json:"itemType,omitempty"`
	ValueRender  *string      `json:"valueRender,omitempty"`
	FilterRender *string      `json:"filterRender,omitempty"`
}

type PurpleItem struct {
	Selector    string    `json:"selector"`
	Label       string    `json:"label"`
	ID          string    `json:"id"`
	ItemType    ItemType  `json:"itemType"`
	ValueRender *string   `json:"valueRender,omitempty"`
	ValueProper *string   `json:"valueProper,omitempty"`
	External    *External `json:"external,omitempty"`
}

type External struct {
	Config string `json:"config"`
}

type DownloadSection struct {
	Selector string `json:"selector"`
	Label    string `json:"label"`
	ID       string `json:"id"`

	SavePath   string `json:"savePath"`
	NameProper string `json:"nameProper"`
	Type       string `json:"type"`
}

type PageLoad struct {
	Wait     string `json:"wait"`
	Selector string `json:"selector"`
	Sleep    int64  `json:"sleep"`
}

type SwitchSection struct {
	SwitchRender string `json:"switchRender"`
	Cases        []Case `json:"cases"`
}

type Case struct {
	Case        bool              `json:"case"`
	DataSection []CaseDataSection `json:"dataSection"`
}

type CaseDataSection struct {
	Selector     string       `json:"selector"`
	Label        string       `json:"label"`
	ID           string       `json:"id"`
	SectionType  string       `json:"sectionType"`
	FilterRender string       `json:"filterRender"`
	Items        []FluffyItem `json:"items"`
}

type FluffyItem struct {
	Selector string   `json:"selector"`
	Label    string   `json:"label"`
	ID       string   `json:"id"`
	ItemType ItemType `json:"itemType"`
}

type ItemType string

const (
	Text ItemType = "text"
)

type IDownloadResult struct {
	Count     int      `json:"count"`
	Errors    []int    `json:"errors"`
	FileNames []string `json:"fileNames"`
	Links     []string `json:"links"`
}

// Generated by https://quicktype.io

type IResult struct {
	Data            map[string]interface{}     `json:"data"`
	DownloadRoot    string                     `json:"downloadRoot"`
	Downloads       map[string]IDownloadResult `json:"downloads"`
	ExternalSection map[string]IResultExternal `json:"externalSection"`
}

type IResultExternal struct {
	Config  interface{} `json:"config"`
	Connect string      `json:"connect"`
	ID      string      `json:"id"`
}
